name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  brakeman:
    name: Security scan (Brakeman)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Run Brakeman
        run: bin/brakeman --no-pager

  rubocop:
    name: Lint Ruby code (RuboCop)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Run RuboCop
        run: bin/rubocop -f github

  rspec:
    name: Run tests (RSpec)
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y build-essential git libpq-dev libyaml-dev pkg-config

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: check DB host reachable
        run: |
          for i in {1..20}; do
            pg_isready -h db -p 5432 && echo "Postgres is ready" && break
            echo "Waiting for Postgres..."
            sleep 5
          done

      - name: Prepare test DB (ridgepole)
        env:
          PGHOST: db
          PGUSER: postgres
          PGPASSWORD: postgres
        run: |
          RAILS_ENV=test bin/rails db:create
          bundle exec ridgepole -c config/database.yml -E test -f db/Schemafile --apply

      - name: Run RSpec
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@db:5432
        run: bin/rspec

  sonarcloud:
    name: Analyze with SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=${{ secrets.PROJECT_KEY }}
            -Dsonar.organization=${{ secrets.ORGANIZATION }}
            -Dsonar.sources=.
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.inclusions=**/*.rb
            -Dsonar.exclusions=**/*.java,**/*.cpp,**/*.c,**/*.h
            -Dsonar.c.file.suffixes=-
            -Dsonar.cpp.file.suffixes=-
            -Dsonar.objc.file.suffixes=-
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}